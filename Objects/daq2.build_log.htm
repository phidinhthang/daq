<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.39.0.0
Copyright (C) 2023 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: phi dinh thang, thang, LIC=----
 
Tool Versions:
Toolchain:       MDK-Lite  Version: 5.39.0.0
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.21
Assembler:       Armasm.exe V6.21
Linker/Locator:  ArmLink.exe V6.21
Library Manager: ArmAr.exe V6.21
Hex Converter:   FromElf.exe V6.21
CPU DLL:         SARMCM3.DLL V5.39.0.0
Dialog DLL:      DARMSTM.DLL V1.69.1.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.2.0.0
Dialog DLL:      TCM.DLL V1.56.4.0
 
<h2>Project:</h2>
C:\Users\admin\Desktop\project\daq2\daq2.uvprojx
Project File Date:  05/08/2024

<h2>Output:</h2>
*** Using Compiler 'V6.21', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Build target 'Target 1'
ili9488.c(1): warning: In file included from...
./ili9488.h(5): warning: In file included from...
./main.h(3): warning: In file included from...
C:/Users/admin/AppData/Local/Arm/Packs/Keil/STM32F1xx_DFP/2.4.1/Device/Include\stm32f10x.h(18): warning: invalid UTF-8 in comment [-Winvalid-utf8]
   18 |   *              - To use or not the peripheral<92>s drivers in application code(i.e. 
      |                                                ^
C:/Users/admin/AppData/Local/Arm/Packs/Keil/STM32F1xx_DFP/2.4.1/Device/Include\stm32f10x.h(19): warning: invalid UTF-8 in comment [-Winvalid-utf8]
   19 |   *                code will be based on direct access to peripheral<92>s registers 
      |                                                                     ^
C:/Users/admin/AppData/Local/Arm/Packs/Keil/STM32F1xx_DFP/2.4.1/Device/Include\stm32f10x.h(26): warning: invalid UTF-8 in comment [-Winvalid-utf8]
   26 |   *           - Macros to access peripheral<92>s registers hardware
      |                                            ^
ili9488.c(55): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   55 |   ILI9488_SETCURSOR(Xpos, Ypos);
      |   ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./ili9488.h(115): note: expanded from macro 'ILI9488_SETCURSOR'
  115 | #define ILI9488_SETCURSOR(x, y)            {LCD_IO_WriteCmd8(ILI9488_CASET); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteCmd8(ILI9488_PASET); LCD_IO_WriteData16_to_2x8(y); LCD_IO_WriteData16_to_2x8(y);}
      |                                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(55): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   55 |   ILI9488_SETCURSOR(Xpos, Ypos);
      |   ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./ili9488.h(115): note: expanded from macro 'ILI9488_SETCURSOR'
  115 | #define ILI9488_SETCURSOR(x, y)            {LCD_IO_WriteCmd8(ILI9488_CASET); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteCmd8(ILI9488_PASET); LCD_IO_WriteData16_to_2x8(y); LCD_IO_WriteData16_to_2x8(y);}
      |                                                                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(55): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   55 |   ILI9488_SETCURSOR(Xpos, Ypos);
      |   ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
./ili9488.h(115): note: expanded from macro 'ILI9488_SETCURSOR'
  115 | #define ILI9488_SETCURSOR(x, y)            {LCD_IO_WriteCmd8(ILI9488_CASET); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteCmd8(ILI9488_PASET); LCD_IO_WriteData16_to_2x8(y); LCD_IO_WriteData16_to_2x8(y);}
      |                                                                                                                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(55): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   55 |   ILI9488_SETCURSOR(Xpos, Ypos);
      |   ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
./ili9488.h(115): note: expanded from macro 'ILI9488_SETCURSOR'
  115 | #define ILI9488_SETCURSOR(x, y)            {LCD_IO_WriteCmd8(ILI9488_CASET); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteCmd8(ILI9488_PASET); LCD_IO_WriteData16_to_2x8(y); LCD_IO_WriteData16_to_2x8(y);}
      |                                                                                                                                                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(55): warning: empty expression statement has no effect; remove unnecessary ';' to silence this warning [-Wextra-semi-stmt]
   55 |   ILI9488_SETCURSOR(Xpos, Ypos);
      |                                ^
ili9488.c(62): warning: implicit conversion loses integer precision: 'int' to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   62 |   LCD_IO_WriteData8((RGBCode & 0x001F) << 3);
      |   ~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~^~~~
ili9488.c(66): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   66 |   ILI9488_SETCURSOR(Xpos, Ypos)
      |   ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./ili9488.h(115): note: expanded from macro 'ILI9488_SETCURSOR'
  115 | #define ILI9488_SETCURSOR(x, y)            {LCD_IO_WriteCmd8(ILI9488_CASET); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteCmd8(ILI9488_PASET); LCD_IO_WriteData16_to_2x8(y); LCD_IO_WriteData16_to_2x8(y);}
      |                                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(66): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   66 |   ILI9488_SETCURSOR(Xpos, Ypos)
      |   ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./ili9488.h(115): note: expanded from macro 'ILI9488_SETCURSOR'
  115 | #define ILI9488_SETCURSOR(x, y)            {LCD_IO_WriteCmd8(ILI9488_CASET); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteCmd8(ILI9488_PASET); LCD_IO_WriteData16_to_2x8(y); LCD_IO_WriteData16_to_2x8(y);}
      |                                                                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(66): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   66 |   ILI9488_SETCURSOR(Xpos, Ypos)
      |   ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
./ili9488.h(115): note: expanded from macro 'ILI9488_SETCURSOR'
  115 | #define ILI9488_SETCURSOR(x, y)            {LCD_IO_WriteCmd8(ILI9488_CASET); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteCmd8(ILI9488_PASET); LCD_IO_WriteData16_to_2x8(y); LCD_IO_WriteData16_to_2x8(y);}
      |                                                                                                                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(66): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   66 |   ILI9488_SETCURSOR(Xpos, Ypos)
      |   ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
./ili9488.h(115): note: expanded from macro 'ILI9488_SETCURSOR'
  115 | #define ILI9488_SETCURSOR(x, y)            {LCD_IO_WriteCmd8(ILI9488_CASET); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteData16_to_2x8(x); LCD_IO_WriteCmd8(ILI9488_PASET); LCD_IO_WriteData16_to_2x8(y); LCD_IO_WriteData16_to_2x8(y);}
      |                                                                                                                                                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(75): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   75 |   LCD_IO_WriteCmd8(ILI9488_CASET); LCD_IO_WriteData16_to_2x8(Xpos) LCD_IO_WriteData16_to_2x8(Xpos + Width - 1)
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(75): warning: implicit conversion loses integer precision: 'int' to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   75 |   LCD_IO_WriteCmd8(ILI9488_CASET); LCD_IO_WriteData16_to_2x8(Xpos) LCD_IO_WriteData16_to_2x8(Xpos + Width - 1)
      |                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(76): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   76 |   LCD_IO_WriteCmd8(ILI9488_PASET); LCD_IO_WriteData16_to_2x8(Ypos) LCD_IO_WriteData16_to_2x8(Ypos + Height - 1)
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(76): warning: implicit conversion loses integer precision: 'int' to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   76 |   LCD_IO_WriteCmd8(ILI9488_PASET); LCD_IO_WriteData16_to_2x8(Ypos) LCD_IO_WriteData16_to_2x8(Ypos + Height - 1)
      |                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
ili9488.c(6): note: expanded from macro 'LCD_IO_WriteData16_to_2x8'
    6 | #define  LCD_IO_WriteData16_to_2x8(dt)    {LCD_IO_WriteData8((dt) >> 8); LCD_IO_WriteData8(dt); }
      |                                                                          ~~~~~~~~~~~~~~~~~ ^~
ili9488.c(83): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
   83 |   uint32_t XYsize = Xsize * Ysize;
      |            ^
ili9488.c(98): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
   98 |   LCD_RS_CMD;
      |   ^~~~~~~~~~
./ili9488.h(22): note: expanded from macro 'LCD_RS_CMD'
   22 | #define LCD_RS_CMD              GPIOB->ODR &= ~(1 << 11)
      |                                            ~~ ^~~~~~~~~~
ili9488.c(101): warning: while loop has empty body [-Wempty-body]
  101 |         while (SPIX->SR & SPI_SR_BSY);
      |                                      ^
ili9488.c(101): note: put the semicolon on a separate line to silence this warning
ili9488.c(114): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  114 |   LCD_RS_CMD;
      |   ^~~~~~~~~~
./ili9488.h(22): note: expanded from macro 'LCD_RS_CMD'
   22 | #define LCD_RS_CMD              GPIOB->ODR &= ~(1 << 11)
      |                                            ~~ ^~~~~~~~~~
ili9488.c(117): warning: while loop has empty body [-Wempty-body]
  117 |         while (SPIX->SR & SPI_SR_BSY);
      |                                      ^
ili9488.c(117): note: put the semicolon on a separate line to silence this warning
ili9488.c(149): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  149 |         GPIOB->CRH &= ~(0xF << 8);
      |                    ~~ ^~~~~~~~~~~
ili9488.c(156): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  156 |         GPIOB->CRH &= ~(0xF << 12);
      |                    ~~ ^~~~~~~~~~~~
ili9488.c(159): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  159 |         GPIOB->CRL &= ~(0xF << 4);
      |                    ~~ ^~~~~~~~~~~
ili9488.c(166): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  166 |         GPIOA->CRL &= ~(0xF << 20);
      |                    ~~ ^~~~~~~~~~~~
ili9488.c(169): warning: signed shift result (0xF0000000) sets the sign bit of the shift expression's type ('int') and becomes negative [-Wshift-sign-overflow]
  169 |         GPIOA->CRL &= ~(0xF << 28);
      |                         ~~~ ^  ~~
ili9488.c(170): warning: signed shift result (0xB0000000) sets the sign bit of the shift expression's type ('int') and becomes negative [-Wshift-sign-overflow]
  170 |         GPIOA->CRL |= 11 << 28; // SPI1 MOSI PA7 output af push pull 50Mhz
      |                       ~~ ^  ~~
ili9488.c(170): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  170 |         GPIOA->CRL |= 11 << 28; // SPI1 MOSI PA7 output af push pull 50Mhz
      |                    ~~ ~~~^~~~~
ili9488.c(177): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  177 |   LCD_RST_ON;
      |   ^~~~~~~~~~
./ili9488.h(26): note: expanded from macro 'LCD_RST_ON'
   26 | #define LCD_RST_ON              GPIOB->ODR &= ~(1 << 10)
      |                                            ~~ ^~~~~~~~~~
ili9488.c(186): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  186 |   LCD_CS_ON;
      |   ^~~~~~~~~
./ili9488.h(30): note: expanded from macro 'LCD_CS_ON'
   30 | #define LCD_CS_ON               GPIOB->ODR &= ~(1 << 1)
      |                                            ~~ ^~~~~~~~~
ili9488.c(193): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  193 |   LCD_CS_ON;
      |   ^~~~~~~~~
./ili9488.h(30): note: expanded from macro 'LCD_CS_ON'
   30 | #define LCD_CS_ON               GPIOB->ODR &= ~(1 << 1)
      |                                            ~~ ^~~~~~~~~
ili9488.c(200): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  200 |   LCD_CS_ON;
      |   ^~~~~~~~~
./ili9488.h(30): note: expanded from macro 'LCD_CS_ON'
   30 | #define LCD_CS_ON               GPIOB->ODR &= ~(1 << 1)
      |                                            ~~ ^~~~~~~~~
ili9488.c(207): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  207 |   LCD_CS_ON;
      |   ^~~~~~~~~
./ili9488.h(30): note: expanded from macro 'LCD_CS_ON'
   30 | #define LCD_CS_ON               GPIOB->ODR &= ~(1 << 1)
      |                                            ~~ ^~~~~~~~~
ili9488.c(214): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  214 |   LCD_CS_ON;
      |   ^~~~~~~~~
./ili9488.h(30): note: expanded from macro 'LCD_CS_ON'
   30 | #define LCD_CS_ON               GPIOB->ODR &= ~(1 << 1)
      |                                            ~~ ^~~~~~~~~
ili9488.c(222): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  222 |   LCD_CS_ON;
      |   ^~~~~~~~~
./ili9488.h(30): note: expanded from macro 'LCD_CS_ON'
   30 | #define LCD_CS_ON               GPIOB->ODR &= ~(1 << 1)
      |                                            ~~ ^~~~~~~~~
ili9488.c(229): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  229 |   LCD_CS_ON;
      |   ^~~~~~~~~
./ili9488.h(30): note: expanded from macro 'LCD_CS_ON'
   30 | #define LCD_CS_ON               GPIOB->ODR &= ~(1 << 1)
      |                                            ~~ ^~~~~~~~~
ili9488.c(237): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  237 |   LCD_CS_ON;
      |   ^~~~~~~~~
./ili9488.h(30): note: expanded from macro 'LCD_CS_ON'
   30 | #define LCD_CS_ON               GPIOB->ODR &= ~(1 << 1)
      |                                            ~~ ^~~~~~~~~
ili9488.c(244): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  244 |   LCD_CS_ON;
      |   ^~~~~~~~~
./ili9488.h(30): note: expanded from macro 'LCD_CS_ON'
   30 | #define LCD_CS_ON               GPIOB->ODR &= ~(1 << 1)
      |                                            ~~ ^~~~~~~~~
ili9488.c(252): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
  252 |   LCD_CS_ON;
      |   ^~~~~~~~~
./ili9488.h(30): note: expanded from macro 'LCD_CS_ON'
   30 | #define LCD_CS_ON               GPIOB->ODR &= ~(1 << 1)
      |                                            ~~ ^~~~~~~~~
ili9488.c(125): warning: unsafe pointer arithmetic [-Wunsafe-buffer-usage]
  125 |       pData++;
      |       ^~~~~
ili9488.c(135): warning: unsafe pointer arithmetic [-Wunsafe-buffer-usage]
  135 |       pData++;
      |       ^~~~~
42 warnings generated.
compiling ili9488.c...
linking...
Program Size: Code=2444 RO-data=300 RW-data=0 ZI-data=1640  
".\Objects\daq2.axf" - 0 Error(s), 42 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.9.0.pack
                ARM::CMSIS@5.9.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.6.0

Package Vendor: Keil
                https://www.keil.com/pack/Keil.STM32F1xx_DFP.2.4.1.pack
                Keil::STM32F1xx_DFP@2.4.1
                STMicroelectronics STM32F1 Series Device Support, Drivers and Examples
   * Component: Startup Version: 1.0.0

<h2>Collection of Component include folders:</h2>
  ./RTE/Device/STM32F103C8
  ./RTE/_Target_1
  C:/Users/admin/AppData/Local/Arm/Packs/ARM/CMSIS/5.9.0/CMSIS/Core/Include
  C:/Users/admin/AppData/Local/Arm/Packs/Keil/STM32F1xx_DFP/2.4.1/Device/Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE@5.6.0

   * Component: Keil::Device:Startup@1.0.0
      Source file:   Device/Source/system_stm32f10x.c
      Source file:   Device/Source/ARM/startup_stm32f10x_md.s
      Include file:  RTE_Driver/Config/RTE_Device.h
      Source file:   Device/Source/ARM/STM32F1xx_OPT.s
Build Time Elapsed:  00:00:03
</pre>
</body>
</html>
